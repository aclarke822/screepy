interface WORKER_PROPS {
    PARTS: BodyPartConstant[];
    STATE_NEW: WORKER_STATES
    INTENT_NEW: WORKER_INTENTS;
    NEW(creep: Worker): Worker;
}

interface WorkerMemory extends CreepMemory {
    name: string;
    room: Room;
    role: ROLE_HARVESTER | ROLE_BUILDER | ROLE_UPGRADER;
    state: WORKER_STATES;
    intent: WORKER_INTENTS;
    parts: BodyPartConstant[];
    targetId: Id<Source> | Id<StructureSpawn> | Id<ConstructionSite<BuildableStructureConstant>> | Id<StructureController>
    birth: number;
}

type INTENT_HARVEST = "HARVEST";
type INTENT_UPGRADE = "UPGRADE";
type INTENT_DEPOSIT = "DEPOSIT";
type INTENT_BUILD = "BUILD";

type HARVESTER_INTENTS = INTENT_HARVEST | INTENT_DEPOSIT
type BUILDER_INTENTS = INTENT_HARVEST | INTENT_BUILD | INTENT_DEPOSIT
type UPGRADER_INTENTS = INTENT_HARVEST | INTENT_UPGRADE | INTENT_DEPOSIT

type WORKER_INTENTS = HARVESTER_INTENTS | BUILDER_INTENTS | UPGRADER_INTENTS;

type STATE_NEW = "NEW";
type STATE_SEEKSOURCE = "SEEKSOURCE";
type STATE_SEEKHOME = "SEEKHOME";
type STATE_RELOCATE = "RELOCATE";
type STATE_GATHER = "GATHER";
type STATE_UNLOAD = "UNLOAD";
type STATE_SEEKFRAME = "SEEKFRAME";
type STATE_CONSTRUCT = "CONSTRUCT";
type STATE_SEEKCONTROLLER = "SEEKCONTROLLER";
type STATE_PROMOTE = "PROMOTE";
type STATE_SEEKFREESTORE = "SEEKFREESTORE";

type HARVESTER_STATES = STATE_NEW | STATE_SEEKSOURCE | STATE_SEEKHOME | STATE_SEEKFREESTORE | STATE_RELOCATE | STATE_GATHER | STATE_UNLOAD;
type BUILDER_STATES = STATE_CONSTRUCT | STATE_GATHER | STATE_NEW | STATE_RELOCATE | STATE_SEEKFRAME | STATE_SEEKSOURCE;
type UPGRADER_STATES = STATE_NEW | STATE_SEEKSOURCE | STATE_SEEKCONTROLLER | STATE_RELOCATE | STATE_GATHER | STATE_PROMOTE;

type WORKER_STATES = HARVESTER_STATES | BUILDER_STATES | UPGRADER_STATES;

type ROLE_HARVESTER = "HARVESTER";
type ROLE_UPGRADER = "UPGRADER";
type ROLE_BUILDER = "BUILDER";

type WORKER_ROLES = ROLE_HARVESTER | ROLE_UPGRADER | ROLE_BUILDER;

type WORKER_PARTS = MOVE | WORK | CARRY;
